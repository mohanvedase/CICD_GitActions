name: Staging to Main Deployment

on:
  push:
    branches:
      - staging
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y python3-pip
        sudo pip install -r requirements.txt  # Install dependencies from requirements.txt
        sudo python app.py &
  test:
    runs-on: ubuntu-latest
    needs: build
    
    outputs:
      tests_passed: ${{ steps.test_result.outputs.tests_passed }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y python3-pip
        sudo pip install -r requirements.txt  # Install dependencies from requirements.txt
        
    - name: Run tests
      id: test_result
      run: |
        # Execute your testing scripts, assuming pytest is used
        pytest test_app.py
        echo "::set-output name=tests_passed::true"  # Set the output if tests pass
      continue-on-error: true  # Continue even if tests fail

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Ensure that 'deploy' job runs after 'test' job

    steps:         
    - name: Deployment step
      if: github.ref == 'refs/heads/staging'
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: | 
          cd /home/ubuntu/
          git clone https://github.com/mohanvedase/CICD_GitActions.git
          sudo apt install -y python3-pip
          sudo pip install flask
          python app.py &
          pytest test_app.py
          git push origin staging
          git push origin staging:main --force
          
          # Add commands to deploy to the staging branch

    - name: Deployment step
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: | 
          cd /home/ubuntu/
          git clone https://github.com/mohanvedase/CICD_GitActions.git
          sudo apt install -y python3-pip
          sudo pip install flask
          git pull origin staging
          git push origin staging:main --force
          # Add commands to deploy to the main branch
