name: Staging to Main Deployment

on:
  push:
    branches:
      - staging
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y python3-pip
        sudo pip install -r requirements.txt  # Install dependencies from requirements.txt.
        sudo python app.py &

  test:
    runs-on: ubuntu-latest
    needs: build

    outputs:
      tests_passed: ${{ steps.test_result.outputs.tests_passed }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y python3-pip
        sudo pip install -r requirements.txt  # Install dependencies from requirements.txt

    - name: Run tests
      id: test_result
      run: |
        # Execute your testing scripts, assuming pytest is used
        pytest test_app.py
        echo "::set-output name=tests_passed::true"  # Set the output if tests pass
      continue-on-error: true  # Continue even if tests fail

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Ensure that 'deploy' job runs after 'test' job

    steps:
    - name: Debug SSH
      run: |
        echo "SSH Key: ${{ secrets.EC2_SSH_KEY }}"
        echo "Host: ${{ secrets.EC2_HOST }}"
        echo "Username: ${{ secrets.EC2_USERNAME }}"
        
    - name: Set up SSH key
      run: |
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > mohan-linux.pem
        sudo chmod 600 mohan-linux.pem
        echo "Private key set up".


    - name: Create directory if not exists
      run: sudo mkdir -p /home/ubuntu/CICD_GitActions


    - name: Change to the directory
      run:  cd /home/ubuntu/CICD_GitActions

    - name: Pull from Git
      run: sudo git pull origin staging

    - name: Make script executable
      run: sudo chmod +x deploy.sh

    - name: Run deploy.sh script
      run: ./deploy.sh

